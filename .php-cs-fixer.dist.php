<?php

declare(strict_types=1);

$finder = PhpCsFixer\Finder::create()
    ->exclude([])
    ->in(__DIR__)
;

return (new \PhpCsFixer\Config())
    ->setRiskyAllowed(true)
    ->setRules([
        '@PSR12' => true,
        'align_multiline_comment' => ['comment_type' => 'phpdocs_like'],
        'array_indentation' => true,
        'array_syntax' => ['syntax' => 'short'],
        'binary_operator_spaces' => [
            'default' => 'single_space',
            'operators' => ['|' => 'no_space'],
        ],
        'blank_line_before_statement' => [
            'statements' => [
                'continue',
                'do',
                'exit',
                'for',
                'foreach',
                'if',
                'return',
                'throw',
                'try',
                'while',
                'declare',
            ],
        ],
        'cast_spaces' => ['space' => 'single'],
        'class_attributes_separation' => ['elements' => ['method' => 'one', 'trait_import' => 'none']],
        'clean_namespace' => true,
        'concat_space' => ['spacing' => 'none'],
        'declare_strict_types' => true,
        'explicit_indirect_variable' => true,
        'explicit_string_variable' => true,
        'fully_qualified_strict_types' => true,
        'global_namespace_import' => ['import_classes' => true, 'import_constants' => true, 'import_functions' => true],
        'heredoc_indentation' => ['indentation' => 'same_as_start'],
        'heredoc_to_nowdoc' => true,
        'implode_call' => true,
        'include' => true,
        'linebreak_after_opening_tag' => true,
        'list_syntax' => ['syntax' => 'short'],
        'magic_constant_casing' => true,
        'magic_method_casing' => true,
        'mb_str_functions' => true,
        'method_chaining_indentation' => true,
        'modernize_types_casting' => true,
        'multiline_comment_opening_closing' => true,
        'multiline_whitespace_before_semicolons' => ['strategy' => 'new_line_for_chained_calls'],
        'native_type_declaration_casing' => true,
        'no_alias_functions' => true,
        'no_alias_language_construct_call' => true,
        'no_alternative_syntax' => true,
        'no_binary_string' => true,
        'no_blank_lines_after_phpdoc' => true,
        'no_empty_comment' => true,
        'no_empty_phpdoc' => true,
        'no_empty_statement' => true,
        'no_extra_blank_lines' => ['tokens' => [
            'curly_brace_block',
            'parenthesis_brace_block',
            'return',
            'square_brace_block',
            'throw',
            'use',
        ]],
        'no_leading_namespace_whitespace' => true,
        'no_mixed_echo_print' => ['use' => 'echo'],
        'no_multiline_whitespace_around_double_arrow' => true,
        'no_php4_constructor' => true,
        'no_short_bool_cast' => true,
        'no_singleline_whitespace_before_semicolons' => true,
        'no_spaces_around_offset' => ['positions' => ['inside', 'outside']],
        'no_superfluous_elseif' => true,
        'no_superfluous_phpdoc_tags' => ['allow_mixed' => false, 'allow_unused_params' => false, 'remove_inheritdoc' => false],
        'no_trailing_comma_in_singleline' => true,
        'no_unneeded_braces' => ['namespaces' => false],
        'no_unneeded_control_parentheses' => ['statements' => [
            'break',
            'clone',
            'continue',
            'echo_print',
            'return',
            'switch_case',
            'yield',
        ]],
        'no_unset_cast' => true,
        'no_unused_imports' => true,
        'no_useless_return' => true,
        'no_useless_sprintf' => true,
        'no_whitespace_before_comma_in_array' => ['after_heredoc' => false],
        'normalize_index_brace' => true,
        'not_operator_with_successor_space' => true,
        'object_operator_without_whitespace' => true,
        'operator_linebreak' => ['only_booleans' => false, 'position' => 'beginning'],
        'php_unit_fqcn_annotation' => true,
        'php_unit_internal_class' => ['types' => [
            'normal',
            'final',
            'abstract',
        ]],
        'php_unit_no_expectation_annotation' => ['target' => 'newest'],
        'php_unit_set_up_tear_down_visibility' => true,
        'php_unit_size_class' => ['group' => 'small'],
        'php_unit_strict' => true,
        'php_unit_test_annotation' => ['style' => 'prefix'],
        'phpdoc_add_missing_param_annotation' => ['only_untyped' => true],
        'phpdoc_align' => ['align' => 'left'],
        'phpdoc_indent' => true,
        'phpdoc_inline_tag_normalizer' => true,
        'phpdoc_line_span' => ['const' => 'single', 'property' => 'single'],
        'phpdoc_order' => true,
        'phpdoc_return_self_reference' => true,
        'phpdoc_scalar' => true,
        'phpdoc_separation' => true,
        'phpdoc_trim' => true,
        'phpdoc_types' => true,
        'phpdoc_types_order' => true,
        'phpdoc_var_annotation_correct_order' => true,
        'phpdoc_var_without_name' => true,
        'psr_autoloading' => ['dir' => null],
        'random_api_migration' => true,
        'return_assignment' => true,
        'simple_to_complex_string_variable' => true,
        'single_line_comment_style' => true,
        'single_quote' => true,
        'single_space_around_construct' => true,
        'single_trait_insert_per_statement' => true,
        'space_after_semicolon' => ['remove_in_empty_for_expressions' => true],
        'standardize_increment' => true,
        'standardize_not_equals' => true,
        'strict_comparison' => true,
        'strict_param' => true,
        'string_line_ending' => true,
        'switch_continue_to_break' => true,
        'ternary_to_elvis_operator' => true,
        'ternary_to_null_coalescing' => true,
        'trailing_comma_in_multiline' => ['after_heredoc' => true],
        'trim_array_spaces' => true,
        'type_declaration_spaces' => true,
        'unary_operator_spaces' => true,
        'use_arrow_functions' => true,
        'void_return' => true,
        'whitespace_after_comma_in_array' => true,
        'yoda_style' => true,
    ])
    ->setFinder($finder)
;
